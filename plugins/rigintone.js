module.exports = {
    name: 'rigintone',
    alias: ['rtone'], // ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä alias ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ë‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂¥‡∑î‡∑Ö‡∑î‡∑Ä‡∂±‡∑ä
    description: 'Send random voice message as PTT (voice note)',
    category: 'fun',
    lastSent: null, // ‡∂ë‡∂ö‡∂∏ voice ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∫‡∑è‡∂∏ ‡∑Ä‡∑Ö‡∂ö‡∑ä‡∑Ä‡∂±‡∑ä‡∂±
    async execute(client, message) {
        try {
            // Voice clips (Direct links)
            const voices = [
                'https://github.com/mrdinesh595/Mssadu/raw/refs/heads/main/database/alive.mp3',
                'https://github.com/mrdinesh595/Mssadu/raw/refs/heads/main/database/menu.mp3',
                'https://github.com/mrdinesh595/Mssadu/raw/refs/heads/main/database/bs.mp3'
            ];

            if (voices.length === 0) {
                return await message.reply('üö´ No voice links found!');
            }

            // ‡∑Ä‡∂ª‡∂ö‡∑ä ‡∂∫‡∑ê‡∑Ä‡∑ñ voice ‡∂ë‡∂ö ‡∂∫‡∂Ω‡∑í ‡∂∫‡∑ë‡∂∏ ‡∑Ä‡∑ê‡∑Ö‡∑ê‡∂ö‡∑ä‡∑Ä‡∑ì‡∂∏
            let availableVoices = voices.filter(v => v !== this.lastSent);

            // ‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ voice once ‡∂∫‡∑ê‡∑Ä‡∑ä‡∑Ä‡∑è ‡∂±‡∂∏‡∑ä reset ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
            if (availableVoices.length === 0) availableVoices = voices;

            // Random voice ‡∂ë‡∂ö‡∂ö‡∑ä select ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
            const randomVoice = availableVoices[Math.floor(Math.random() * availableVoices.length)];
            this.lastSent = randomVoice; // ‡∂Ö‡∑Ä‡∑É‡∂±‡∑ä‡∑Ä ‡∂∫‡∑ê‡∑Ä‡∑ñ voice ‡∂ë‡∂ö save ‡∂ö‡∂ª‡∂±‡∑ä‡∂±

            // Voice message (PTT format) send ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
            await client.sendMessage(message.chat, {
                audio: { url: randomVoice },
                mimetype: 'audio/ogg; codecs=opus', // PTT format
                ptt: true // Voice note (push to talk) flag
            }, { quoted: message });

        } catch (error) {
            console.error('Error in rigintone command:', error);
            await message.reply('‚ùå Error occurred while sending the voice message.');
        }
    }
};
